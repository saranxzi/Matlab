%% Partial Derivates for two variables -------------------

clc
clear all
format compact
syms x y

z = input('Enter the two dimensional function f(x,y): ');
x1 = input('enter the x value at which the derivative has to be evaluated: ');
y1 = input('enter the y value at which the derivative has to be evaluated: ');

z1 = subs(subs(z,x,x1),y,y1)
ezsurf(z,[x1-2 x1+2])
f1 = diff(z,x)
slopex = subs(subs(f1,x,x1),y,y1);

[x2,z2]=meshgrid(x1-2:.25:x1+2,0:0.5:10);
y2=y1*ones(size(x2));
hold on
h1=surf(x2,y2,z2);
set(h1,'FaceColor',[0.7,0.7,0.7],'EdgeColor','none')

t=linspace(-1,1);
x3=x1+t;
y3=y1*ones(size(t));
z3=z1+slopex*t;
line(x3,y3,z3,'color','blue','linewidth',2)



%% minima and Maxima two variables-----------------

clc
clear all
close all
format compact

syms x y real
f =input('Enter the function f(x,y): ');
fx = diff(f,x)
fy = diff(f,y)
[ax ay] = solve(fx,fy)
fxx = diff(fx,x)
D = fxx*diff(fy,y) - diff(fx,y)^2

r=1;
for k=1:1:size(ax)
    if ((imag(ax(k))==0)&&(imag(ay(k))==0))
        ptx(r)=ax(k);
        pty(r)=ay(k);
        r=r+1;
    end
end

a1=max(double(ax))
a2=min(double(ax))
b1=max(double(ay))
b2=min(double(ay))
ezsurf(f,[a2-.5,a1+.5,b2-.5,b1+.5])
colormap('summer');
shading interp
hold on

for r1=1:1:(r-1)
    T1=subs(subs(D,x,ptx(r1)),y,pty(r1))
    T2=subs(subs(fxx,x,ptx(r1)),y,pty(r1))
    if (double(T1) == 0)
        sprintf('The point (x,y) is (%d,%d) and need further investigation', double(ptx(r1)),double(pty(r1)))
    else
        if (double(T1) < 0)
            T3=subs(subs(f,x,ptx(r1)),y,pty(r1))
            sprintf('The point (x,y) is (%d,%d) a saddle point', double(ptx(r1)),double(pty(r1)))
            plot3(double(ptx(r1)),double(pty(r1)),double(T3),'b.','markersize',30);
    else
        if (double(T2) < 0)
        sprintf('The maximum point(x,y) is (%d, %d)', double(ptx(r1)),double(pty(r1)))
        T3=subs(subs(f,x,ptx(r1)),y,pty(r1))
        sprintf('The value of the function is %d', double(T3))
        plot3(double(ptx(r1)),double(pty(r1)),double(T3),'r+','markersize',30);
    else
        sprintf('The minimum point(x,y) is (%d, %d)', double(ptx(r1)),double(pty(r1)))
        T3=subs(subs(f,x,ptx(r1)),y,pty(r1))
        sprintf('The value of the function is %d', double(T3))
        plot3(double(ptx(r1)),double(pty(r1)),double(T3),'m*','markersize',30);
    end
    end
end



%%lagrange multipliers --------------------------

symsÂ x y lam real
f= x^2+2*y^2 %input('Enter f(x,y) to be extremized : ');
g= x^2+y^2-1 %%input('Enter the constraint function g(x,y) : ');
F=f-lam*g

Fx=diff(F,x)
Fy=diff(F,y)
[ax,ay,alam]=solve([Fx,Fy,g],x,y,lam)
ax=double(ax)
ay=double(ay)

r=1;
for k=1:1:size(ax)
    if ((imag(ax(k))==0)&&(imag(ay(k))==0))
        ptx(r)=ax(k);
        pty(r)=ay(k);
        r=r+1;
    end
end

ax=ptx
ay=pty
T = subs(f,{x,y},{ax,ay})
T=double(T)
epx=3
epy=3
figure (1)
for i = 1:length(T)
    D=[ax(i)-epx ax(i)+epx ay(i)-epy ay(i)+epy]
    fprintf('The critical point (x,y) is (%1.3f,%1.3f).',ax(i),ay(i))
    fprintf('The value of the function is %1.3f\n',T(i))
    ezcontour(f,D)
    hold on
    h = ezplot(g,D);
    set(h,'Color',[1,0.7,0.9])
    plot(ax(i),ay(i),'k.','markersize',15+2*i)
end

f_min=min(T)
f_max=max(T)
